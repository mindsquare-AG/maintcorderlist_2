<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" id="BookTime" fragmentName="my.BookTime" xmlns:f="sap.ui.layout.form">
	<Dialog id="BookTime_Dialog" class="sapUiPopupWithPadding" contentHeight="80%"
		contentWidth="{= (${device>/system/phone} || (${device>/system/tablet} &amp;&amp; ${device>/orientation/portrait})) ? '90%' : '40%'}">
		<customHeader>
			<Bar>
				<contentMiddle>
					<Title id="BookTime_Dialog_Title" text="{i18n>master.bookTime}"/>
				</contentMiddle>
				<contentRight>
					<Button press="onBookTimeClose" tooltip="schließen" icon="sap-icon://decline"/>
				</contentRight>
			</Bar>
		</customHeader>
		<f:SimpleForm editable="true" emptySpanL="3" labelSpanL="3" emptySpanM="3" labelSpanM="3" layout="ResponsiveGridLayout">
			<f:content>
				<HBox alignItems="Center" justifyContent="Center">
					<Text renderWhitespace="true" text="Dauer"/>
					<Switch id="switchBooking" state="{view>/BookTime/Hours}" customTextOn=" " customTextOff=" " change="handleChange"/>
					<Text renderWhitespace="true" text="Zeiten"/>
				</HBox>
				<Label/>
				<!-- Stunden -->
				<!-- TimePicker id="time1" valueFormat="HH:mm" displayFormat="HH:mm" change="handleChange1" placeholder="Stunden:Minuten"
					visible="{= !${view>/BookTime/Hours}}" value="{Idaur}"/ -->
				<!--Alban Change Add field description -->
				<Label text="Dauer in Stunden" visible="{= !${view>/BookTime/Hours}}"/>
				<Input id="time1" value="{/IdaurFull}" valueLiveUpdate="true" placeholder="Dauer in Minuten" visible="{= !${view>/BookTime/Hours}}"
					change="onIdaurChange"/>
				<!--<Input id="time1" value="{/Idaur}" valueLiveUpdate="true" placeholder="Dauer in Minuten" visible="{= !${view>/BookTime/Hours}}" change="onIdaurChange"/>-->
				<!--Alban Change Add field description -->
				<!-- Uhrzeit von -->
				<Label text="von" visible="{view>/BookTime/Hours}"/>
				<TimePicker id="time2" displayFormat="HH:mm" placeholder="Uhrzeit" visible="{view>/BookTime/Hours}" value="{/Isdt}" change="onIsdtChange"/>
				<!-- Uhrzeit bis -->
				<Label text="bis" visible="{view>/BookTime/Hours}"/>
				<TimePicker id="time3" displayFormat="HH:mm" placeholder="Uhrzeit" visible="{view>/BookTime/Hours}" value="{/Iedt}" change="onIedtChange"/>
				<!-- Rückmeldetext -->
				<Label text="{i18n>master.rText}"/>
				<!--Alban Change change binding to long text -->
				<!--<Input value="{/Ltxa1}"/>-->
				<Input value="{/Longtext}"/>
				<!--Alban Change change binding to long text -->
				<!-- Endrückmeldung -->
				<Label/>
				<CheckBox text="{i18n>master.endR}" selected="{/FinConf}"/>
				<!-- Arbeitsplatz -->
				<Label text="{i18n>master.arbpl}"/>
				<!--Alban Change added a length of 1000 items to the select for both elements -->
				<Select id="selectArbpl" forceSelection="false" maxLength="1000"
					items="{ path: 'generalServices>/ResponsibleWorkCenterSet', length : '1000'}" selectedKey="{/Arbpl}" change="onArbplChange">
					<core:ListItem text="({generalServices>Vaplz}) {generalServices>Vatxt}" additionalText="{generalServices>ObjId}"
						key="{generalServices>Vaplz}"/>
				</Select>
				<!-- Leistungsart -->
				<Label text="{i18n>master.lArt}"/>
				<!--Alban Change New Binding -->
				<!--<Select id="selectLearr" forceSelection="false" maxLength="1000" items="{ path: 'generalServices>/ActivityTypeSet', length : '1000'}"-->
				<!--	selectedKey="{/Learr}" change="onLearrChange">-->
				<!--	<core:ListItem text="({generalServices>Lstar}) {generalServices>LstarText}" additionalText="{generalServices>Lstar}"-->
				<!--		key="{generalServices>Lstar}"/>-->
				<!--</Select>-->
				<Select id="selectLearr" forceSelection="false" maxLength="1000" items="{ path: 'learrItemNew>/', length : '1000'}"
					selectedKey="{/Learr}" change="onLearrChange">
					<core:ListItem text="({learrItemNew>Lstar}) {learrItemNew>LstarText}" additionalText="{learrItemNew>ObjId}"
						key="{learrItemNew>Lstar}"/>
				</Select>
				<!--Alban Change New Binding -->
				<!--Alban Change Alban Change added a length of 1000 items to the select for both elements -->
			</f:content>
		</f:SimpleForm>
		<buttons>
			<Button text="Abbrechen" press="onBookTimeClose" id="btnBookTimeClose"/>
			<Button type="Emphasized" text="{i18n>master.bookTime}" press="onBookTimePressed" id="btnBookTimeConfirm"/>
		</buttons>
	</Dialog>
</core:FragmentDefinition>